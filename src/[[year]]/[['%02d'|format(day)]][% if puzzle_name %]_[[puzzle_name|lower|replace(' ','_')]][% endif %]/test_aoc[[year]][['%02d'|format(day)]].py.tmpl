"""Tests for AoC [[day]], [[year]][% if puzzle_name %]: [[puzzle_name]][% endif %]"""

# Standard library imports
import pathlib

# Third party imports
import aoc[[year]][['%02d'|format(day)]]
import pytest

PUZZLE_DIR = pathlib.Path(__file__).parent


@pytest.fixture
def input1():
    puzzle_input = (PUZZLE_DIR / "input1.txt").read_text().strip()
    return aoc[[year]][['%02d'|format(day)]].parse(puzzle_input)


@pytest.fixture
def input2():
    puzzle_input = (PUZZLE_DIR / "input2.txt").read_text().strip()
    return aoc[[year]][['%02d'|format(day)]].parse(puzzle_input)


@pytest.mark.skip(reason="Not implemented")
def test_parse_input1(input1):
    """Test that input is parsed properly"""
    assert input1 == ...


@pytest.mark.skip(reason="Not implemented")
def test_part1_input1(input1):
    """Test part 1 on example input"""
    assert aoc[[year]][['%02d'|format(day)]].part1(input1) == ...


@pytest.mark.skip(reason="Not implemented")
def test_part2_input2(input2):
    """Test part 2 on example input"""
    assert aoc[[year]][['%02d'|format(day)]].part2(input2) == ...
